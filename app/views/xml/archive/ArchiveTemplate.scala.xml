@import views.xml.xml.archive.sections._

@this(
    layout: Layout,
    bookmarkTree: BookmarkTree,
    eligibilityFails: EligibilityFails,
    applicantDetails: ApplicantDetails,
    paymentDetails: PaymentDetails,
    partnerDetails: PartnerDetails,
    childDetails: ChildDetails
)

@(model: journey.JourneyModel, additionalDetails: AdditionalArchiveDetails)(implicit messages: Messages)

<fo:root xml:lang="en" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" font-family="sans-serif">
    @layout()

    <fo:declarations>
        <pdf:catalog xmlns:pdf="http://xmlgraphics.apache.org/fop/extensions/pdf">
            <pdf:dictionary type="normal" key="ViewerPreferences">
                <pdf:boolean key="DisplayDocTitle">true</pdf:boolean>
            </pdf:dictionary>
        </pdf:catalog>
    </fo:declarations>

    @bookmarkTree(model)

    @if(model.otherEligibilityFailureReasons.nonEmpty) {
        @eligibilityFails(model)
    }

    @applicantDetails(model, additionalDetails)

    @model.relationship.partner.map { partner =>
        @partnerDetails(partner)
    }

    @for((child, index) <- model.children.toList.zipWithIndex) {
        @childDetails(child, (index + 1))
    }

    @paymentDetails(model)

</fo:root>
