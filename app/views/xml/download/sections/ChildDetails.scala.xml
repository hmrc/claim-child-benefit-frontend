@this(line: Line)

@(child: journey.Child, index: Int)(implicit messages: Messages)

<fo:page-sequence master-reference="child">

    <fo:static-content flow-name="xsl-region-before">
        <fo:block>
            <fo:external-graphic src="url(pdf/logo/logo.jpg)" padding-right="1cm" fox:alt-text="HM Revenue and Customs logo" />
            <fo:block margin-left="7.5cm" margin-top="-1.5cm" text-align="right" font-size="18pt" font-weight="bold">@messages("pdf.title")</fo:block>
        </fo:block>
        <fo:block border-bottom-width="1pt" border-bottom-style="solid" margin-top="1mm" margin-bottom="1mm"/>
    </fo:static-content>

    <fo:static-content flow-name="xsl-region-after" role="artifact">

        <fo:table width="100%" table-layout="fixed" font-size="11pt">
            <fo:table-column column-number="1" column-width="45mm"/>
            <fo:table-column column-number="2" column-width="80mm"/>
            <fo:table-column column-number="3" column-width="45mm"/>

            <fo:table-body>
                <fo:table-row height="6mm">
                    <fo:table-cell padding="1mm">
                        <fo:block>@messages("pdf.child.hmrcUseOnly")</fo:block>
                    </fo:table-cell>
                    <fo:table-cell border="0.4mm solid black" padding="1mm">
                        <fo:block/>
                    </fo:table-cell>
                    <fo:table-cell border="0.4mm solid black" padding="1mm">
                        <fo:block/>
                    </fo:table-cell>
                </fo:table-row>
            </fo:table-body>
        </fo:table>

        <fo:block text-align="center" font-size="12pt" margin-top="1cm">@messages("pdf.page") <fo:page-number/> @messages("pdf.of") <fo:page-number-citation ref-id="FinalElement" /></fo:block>
    </fo:static-content>

    <fo:flow flow-name="xsl-region-body" font-size="12pt" text-align="left">

        <fo:block-container width="90%">
            <fo:block>

                <fo:block-container margin-bottom="1cm" wrap-option="wrap" page-break-after="always">

                    <fo:block role="H2" @if(index==1){id="child-details"} font-size="18pt" font-weight="bold" margin-bottom="0.5cm">@messages("pdf.childDetails", index)</fo:block>

                    @line("pdf.name.last", child.name.lastName)

                    @line("pdf.name.first", child.name.firstName)

                    @child.name.middleNames.map { middleNames =>
                        @line("pdf.name.middle", middleNames)
                    }

                    @line("pdf.biologicalSex", messages(s"childBiologicalSex.${child.biologicalSex.toString}"))

                    @line("pdf.dateOfBirth", date(child.dateOfBirth))

                    @line("pdf.birthRegistrationCountry", messages(s"childBirthRegistrationCountry.${child.countryOfRegistration.toString}"))

                    @child.birthCertificateNumber.map { number =>
                        @line("pdf.birthCertificateNumber", number.display)
                    }.getOrElse(line("pdf.birthCertificateNumber", messages("pdf.notProvided")))

                    @line("pdf.relationshipToApplicant", messages(s"applicantRelationshipToChild.${child.relationshipToApplicant.toString}"))

                    @line("pdf.adoptingThroughLocalAuthority", booleanToYesNo(child.adoptingThroughLocalAuthority))

                    @line("pdf.claimedBefore", booleanToYesNo(child.previousClaimant.nonEmpty))

                    @child.previousClaimant.map { previousClaimant =>
                        @line("pdf.previousClaimantName", previousClaimant.name.map(_.display).getOrElse(messages("pdf.notKnown")))
                        <fo:block margin-bottom="3mm">
                            <fo:block font-weight="bold">@messages("pdf.previousClaimantUkAddress")</fo:block>
                                @previousClaimant.address.map(_.lines.map { x =>
                                    <fo:block width="8cm" wrap-option="wrap">{x.toUpperCase}</fo:block>
                            }).getOrElse(messages("pdf.notKnown"))
                        </fo:block>
                    }

                    @if(child.guardian.isEmpty) {
                        @line("pdf.childLivingWithApplicant", messages("site.yes"))
                    } else {
                        @line("pdf.childLivingWithApplicant", messages("site.no"))
                    }

                    @child.guardian.map { guardian =>
                        @line("pdf.guardianName", guardian.name.map(_.display).getOrElse(messages("pdf.notKnown")))
                        <fo:block margin-bottom="3mm" keep-together="always">
                            <fo:block font-weight="bold">@messages("pdf.guardianAddress")</fo:block>
                            @guardian.address.map(_.lines.map { x =>
                                <fo:block width="8cm" wrap-option="wrap">{x.toUpperCase}</fo:block>
                            }).getOrElse(messages("pdf.notKnown"))
                        </fo:block>
                    }

                    @if(child.guardian.isEmpty) {
                        @if(child.previousGuardian.isEmpty) {
                            @line("pdf.childLivedWithAnyoneElse", messages("site.no"))
                        } else {
                            @line("pdf.childLivedWithAnyoneElse", messages("site.yes"))
                        }
                    }

                    @child.previousGuardian.map { previousGuardian =>
                        @line("pdf.previousGuardianName", previousGuardian.name.map(_.display).getOrElse(messages("pdf.notKnown")))
                        <fo:block margin-bottom="3mm" keep-together="always">
                            <fo:block font-weight="bold">@messages("pdf.previousGuardianAddress")</fo:block>
                            @previousGuardian.address.map(_.lines.map { x =>
                                <fo:block width="8cm" wrap-option="wrap">{x.toUpperCase}</fo:block>
                            }).getOrElse(messages("pdf.notKnown"))
                        </fo:block>
                        @line("pdf.previousGuardianPhoneNumber", previousGuardian.phoneNumber.getOrElse(messages("pdf.notKnown")))
                    }

                    @child.dateChildStartedLivingWithApplicant.map { x =>
                        @line("pdf.dateChildStartedLivingWithApplicant", date(x))
                    }

                    @line("pdf.hasPreviousNames", booleanToYesNo(child.previousNames.nonEmpty))

                    @child.nameChangedByDeedPoll.map(value => line("pdf.nameChangedByDeedPoll", booleanToYesNo(value)))

                    @if(child.previousNames.nonEmpty) {
                        <fo:block margin-bottom="3mm">
                            <fo:block font-weight="bold">@messages("pdf.previousNames")</fo:block>
                            @child.previousNames.map { x =>
                                <fo:block width="8cm" wrap-option="wrap">@(x.fullName)</fo:block>
                            }
                        </fo:block>
                    }
                </fo:block-container>
            </fo:block>
        </fo:block-container>
    </fo:flow>
</fo:page-sequence>
